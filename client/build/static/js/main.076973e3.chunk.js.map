{"version":3,"sources":["components/Header.js","components/AddBook.js","components/Comment.js","components/CommentBox.js","components/Book.js","components/BookList.js","components/ApiText.js","components/ApiInfo.js","App.js","reportWebVitals.js","index.js"],"names":["Header","AddBook","addBook","addBookState","setAddBookState","showAddBook","setShowAddBook","id","className","onClick","onSubmit","placeholder","type","name","value","onChange","e","target","Comment","comment","CommentBox","commentList","_id","addComment","addCommentState","setAddCommentState","comments","map","el","index","Book","title","commentcount","toggleComments","deleteBook","BookList","bookList","books","ApiText","ApiInfo","showAPI","setShowAPI","App","useEffect","getBooks","useState","setBookList","setCommentList","a","fetch","response","json","data","console","log","preventDefault","formData","FormData","append","body","URLSearchParams","method","text","refresh","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.076973e3.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div>\r\n      <h1>Book Review</h1>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","const AddBook = ({ addBook, addBookState, setAddBookState, showAddBook, setShowAddBook }) => {\r\n  return (\r\n    <>\r\n    <button id=\"add-book-button\" className=\"button\" onClick={() => setShowAddBook(!showAddBook)}>{showAddBook? \"Hide\": \"Add Book\" }</button>\r\n    {showAddBook && \r\n      <form onSubmit={addBook} className=\"add-book\">      \r\n        <input\r\n          placeholder=\"book title\" \r\n          type=\"text\" \r\n          id=\"title\" \r\n          name=\"title\" \r\n          value={addBookState}\r\n          onChange={(e) => setAddBookState(e.target.value)}/>\r\n        <input className=\"button\" type=\"submit\" value=\"Submit\" />\r\n      </form> \r\n  }\r\n  </>\r\n  )\r\n}\r\n\r\nexport default AddBook\r\n","const Comment = ({ comment }) => {\r\n  return (\r\n    <div className=\"comment\">\r\n      {comment}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Comment\r\n","import Comment from \"./Comment.js\"\r\n\r\nconst CommentBox = ({ commentList, _id, addComment,addCommentState,setAddCommentState }) => {\r\n\r\n  const comments = commentList.map((el, index) => {\r\n    return (\r\n      <Comment key={index}\r\n        comment={el}/>\r\n    )\r\n  })\r\n\r\n  return (\r\n    <div className=\"comment-box\">\r\n      {comments}\r\n      <form className=\"add-comment\" onSubmit={(e) => addComment(e,_id)}>\r\n        <input value={addCommentState} \r\n          placeholder=\"add comment...\"\r\n          onChange={(e) => setAddCommentState(e.target.value)}/>\r\n        <input className=\"button\" type=\"submit\" value=\"Post\" />\r\n      </form>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default CommentBox\r\n","import CommentBox from \"./CommentBox.js\"\r\n\r\nconst Book = ({ _id, title, commentcount, toggleComments, deleteBook, commentList, addComment,addCommentState,setAddCommentState }) => {\r\n\r\n  return (\r\n      <div className=\"book-item\">\r\n        <div className=\"book-element\">\r\n          {title}\r\n        </div>\r\n        <div className=\"book-element book-comments\" \r\n          onClick={() => toggleComments(_id)}>\r\n          Comments: {commentcount}\r\n        </div>\r\n        <div className=\"book-delete\" \r\n          onClick={() => deleteBook(_id)}>\r\n          X\r\n        </div>\r\n        {commentList._id===_id && \r\n          <CommentBox commentList={commentList.comments} \r\n            _id={_id}\r\n            addComment={addComment}\r\n            addCommentState={addCommentState}\r\n            setAddCommentState={setAddCommentState}\r\n        />}\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default Book\r\n","import Book from \"./Book.js\"\r\n\r\nconst BookList = ({ bookList, toggleComments, deleteBook, commentList, addComment, addCommentState, setAddCommentState }) => {\r\n\r\n  const books = bookList.map((el,index) => {\r\n    return (\r\n      <Book key={index}\r\n        _id={el._id}\r\n        title={el.title}\r\n        commentcount={el.commentcount}\r\n        toggleComments={toggleComments}\r\n        deleteBook={deleteBook}\r\n        commentList={commentList}\r\n        addComment={addComment}\r\n        addCommentState={addCommentState}\r\n        setAddCommentState={setAddCommentState}/>\r\n    )\r\n  })\r\n\r\n  return (\r\n    <div className=\"book-list\">\r\n      {books}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BookList\r\n","import React from 'react'\r\n\r\nconst ApiText = () => {\r\n  return (\r\n    <div id=\"api-text\">\r\n      <p>New books can be posted to /api/books by passing in a book title</p>\r\n      <code>&#123; method: \"POST\" body: &#123; title: Great Expectations &#125; &#125;</code>\r\n      <p>You will receive a JSON response which will include the newly created book's _id </p>\r\n      <code> &#123; \"_id\":\"7a29dbce-c104-47c1-8739-eafef9b840f3\", \"title\":\"Great Expectations\", \"commentcount\":0,\"comments\":[]&#125; </code>\r\n      <hr/>\r\n\r\n      <p>Comments can be posted to /api/books/:bookid</p>\r\n      <code>&#123; method: \"POST\" body: &#123; comment: \"What a narrative rollercoaster!\" &#125; &#125;</code>\r\n      <p>The return JSON response will include the book title and the full comment array</p>\r\n      <code>&#123;\"_id\":\"7a29dbce-c104-47c1-8739-eafef9b840f3\", \"title\":\"Great Expectations\", \"comments\":[\"What a narrative rollercoaster!\"]&#125;</code>\r\n      <hr/>\r\n\r\n      <p>A full list of books can be gotten from /api/books</p>\r\n      <code>&#123; method: \"GET\" &#125;</code>\r\n      <p>The return JSON will have an array with the full list of books and the number of comments</p>\r\n      <code>[&#123;\"_id\":\"e7131f05-fe7f-4540-801c-88c6d6f72e9e\", \"title\":\"Test123\", \"commentcount\":0&#125;,\r\n        <br/>&#123;\"_id\":\"7a29dbce-c104-47c1-8739-eafef9b840f3\", \"title\":\"Great Expectations\", \"commentcount\":1&#125;]</code>\r\n      <hr/>\r\n\r\n      <p>An individual book with the array of comments can be gotten from /api/books/:bookid</p>\r\n      <code>&#123; method: \"GET\" &#125;</code>\r\n      <p>The return JSON will include the book with its array of comments</p>\r\n      <code>&#123;\"_id\":\"7a29dbce-c104-47c1-8739-eafef9b840f3\", \"title\":\"Great Expectations\", \"comments\":[\"What a narrative rollercoaster!\"]&#125;</code>\r\n      <hr/>\r\n\r\n      <p>An individual book can be deleted from /api/books/:bookid</p>\r\n      <code>&#123; method: \"DELETE\" body: &#123; title: Great Expectations &#125; &#125;</code>\r\n      <p>The return will just be a string notifying of whether the delete was successful or not</p>\r\n      <hr/>\r\n\r\n      <p>The entire book collection can be deleted from /api/books</p>\r\n      <code>&#123; method: \"DELETE\" &#125;</code>\r\n      <p>The return will just be a string notifying of whether the delete was successful or not</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ApiText\r\n","import ApiText from \"./ApiText\"\r\n\r\nconst ApiInfo = ({ showAPI, setShowAPI}) => {\r\n  return (\r\n    <div>\r\n      <h2>API Usage <button \r\n        onClick={() => setShowAPI(!showAPI)}\r\n        className=\"button api-button\">\r\n          {showAPI? \"Hide\":\"Show\"}\r\n        </button></h2>\r\n      {showAPI && <ApiText />}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ApiInfo\r\n","import './App.css';\nimport Header from \"./components/Header.js\";\nimport AddBook from \"./components/AddBook.js\"\nimport BookList from \"./components/BookList.js\"\nimport ApiInfo from \"./components/ApiInfo.js\"\nimport { useState, useEffect } from \"react\"\n\nfunction App() {\n\n  useEffect(() => {\n      getBooks()\n    return () => {\n      \n    }\n  }, [])\n\n  const [addBookState, setAddBookState] = useState(\"\")\n  const [addCommentState, setAddCommentState] = useState(\"\")\n  const [bookList, setBookList] = useState([])\n  const [commentList, setCommentList] = useState({_id: \"\", comments: []})\n  const [showAddBook, setShowAddBook] = useState(false)\n  const [showAPI, setShowAPI] = useState(false)\n\n  const getBooks = async () => {\n    try {\n      const response = await fetch(\"/api/books\")\n      const data = await response.json()\n      setBookList(data)\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  const addBook = async (e) => {\n    // send a post request to api\n    e.preventDefault()\n    let formData = new FormData();\n    formData.append(\"title\",e.target.title.value)\n    const body = new URLSearchParams(formData)\n\n    try {\n      const response = await fetch(\"/api/books\", {\n        method: \"POST\",\n        body\n      })\n      const data = await response.text()\n      console.log(data)\n    } catch (error) {\n      console.log(error)\n    }\n\n    //reset add book input back to \"\"\n    setAddBookState(\"\")\n\n    //refresh book array when done\n    getBooks()\n  }\n\n  const toggleComments = async (_id, refresh) => {\n\n    // check if the call is a refresh (i.e. when a comment has been posted)\n    // check if the same comment has been selected and hide (by setting state back to default)\n    if(commentList._id===_id && !refresh) {\n      return setCommentList({_id: \"\", comments:[]})\n    }\n\n    // fetch the comment list from the api\n    try {\n      const response = await fetch(`/api/books/${_id}`)\n      const data = await response.json()\n\n      setCommentList({\n        _id: data._id,\n        comments: data.comments\n      })\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  const deleteBook = async (_id) => {\n    try {\n      //send delete request to api\n      await fetch(`/api/books/${_id}`, {\n        method: \"DELETE\"\n      })\n      \n      // refresh the book list\n      getBooks();\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\nconst addComment = async (e, _id) => {\n  // prevent submit from refrehsing page\n  e.preventDefault()\n\n  // create formdata using comment state\n  let formData = new FormData()\n  formData.append(\"comment\", addCommentState) \n  const body = new URLSearchParams(formData)\n\n  try {\n    // send post request to api\n    const response = await fetch(`/api/books/${_id}`, {\n      method: \"POST\",\n      body\n    })\n    const data = await response.text()\n    console.log(data)\n  } catch (error) {\n    console.log(error)\n  }\n\n  // reset comment input back to empty\n  setAddCommentState(\"\")\n\n  // refresh comment list to show new comment\n  toggleComments(_id,true)\n\n  // refresh book list to update comment count\n  getBooks()\n}\n\n  return (\n    <div className=\"app\">\n      <Header />\n      <AddBook \n        addBook={addBook}\n        addBookState={addBookState}\n        setAddBookState={setAddBookState}\n        showAddBook={showAddBook}\n        setShowAddBook={setShowAddBook}\n        />\n      <BookList \n        bookList={bookList}\n        toggleComments={toggleComments}\n        deleteBook={deleteBook}\n        commentList={commentList}\n        addComment={addComment}\n        addCommentState={addCommentState}\n        setAddCommentState={setAddCommentState}/>\n      <ApiInfo \n        showAPI={showAPI}\n        setShowAPI={setShowAPI}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}